{"version":3,"sources":["./src/app/modules/auth/auth.module.ts","./src/app/modules/auth/register-page/register-page.component.ts","./src/app/modules/auth/register-page/register-page.component.html","./src/app/modules/auth/register-page/password-match.validator.ts","./src/app/modules/auth/auth-routing.module.ts","./src/app/modules/auth/login-page/login-page.component.ts","./src/app/modules/auth/login-page/login-page.component.html"],"names":[],"mappings":"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","file":"modules-auth-auth-module.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { AuthRouterModule } from './auth-routing.module';\r\nimport { LoginPageComponent } from './login-page/login-page.component';\r\nimport { RegisterPageComponent } from './register-page/register-page.component';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { CommonModule } from '@angular/common';\r\n\r\n@NgModule({\r\n  imports: [AuthRouterModule, ReactiveFormsModule, CommonModule],\r\n  declarations: [LoginPageComponent, RegisterPageComponent],\r\n  providers: []\r\n})\r\nexport class AuthModule {}\r\n","import {\r\n  ChangeDetectionStrategy,\r\n  ChangeDetectorRef,\r\n  Component\r\n} from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { FirebaseAuthService } from 'src/app/shared/services/firebase/firebase-auth.service';\r\nimport { UserDataService } from 'src/app/shared/services/data/user-data.service';\r\nimport { passwordMatch } from './password-match.validator';\r\n\r\n@Component({\r\n  selector: 'app-register-page',\r\n  templateUrl: './register-page.component.html',\r\n  styleUrls: ['./register-page.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class RegisterPageComponent {\r\n  public registerForm: FormGroup;\r\n  public user$ = this.userDataService.user$;\r\n  public error = '';\r\n\r\n  constructor(\r\n    private userDataService: UserDataService,\r\n    private firebaseAuthService: FirebaseAuthService,\r\n    private formBuilder: FormBuilder,\r\n    private router: Router,\r\n    private changeDetectorRef: ChangeDetectorRef\r\n  ) {\r\n    this.registerForm = this.formBuilder.group(\r\n      {\r\n        email: [null, [Validators.required, Validators.email]],\r\n        password: [null, [Validators.required, Validators.minLength(6)]],\r\n        passConfirm: [null, [Validators.required, Validators.minLength(6)]]\r\n      },\r\n      {\r\n        validator: passwordMatch\r\n      }\r\n    );\r\n  }\r\n\r\n  public onSubmit(): void {\r\n    const email = this.registerForm.value.email;\r\n    const password = this.registerForm.value.password;\r\n    this.firebaseAuthService.signUp(email, password).subscribe(\r\n      (data) => {\r\n        this.userDataService.setUser(data);\r\n        this.router.navigate(['']);\r\n      },\r\n      (err) => {\r\n        this.error = err.message;\r\n        this.registerForm.reset();\r\n        this.changeDetectorRef.detectChanges();\r\n      }\r\n    );\r\n  }\r\n}\r\n","<form\r\n  [formGroup]=\"registerForm\"\r\n  (submit)=\"onSubmit()\"\r\n  *ngIf=\"!(user$ | async)?.email\"\r\n>\r\n  <div class=\"glass-window flex-cont\">\r\n    <h1>Sign Up</h1>\r\n    <p class=\"error\" *ngIf=\"error\">{{ error }}</p>\r\n    <p class=\"error\" *ngIf=\"registerForm.errors?.mismatch\">\r\n      Password do not match\r\n    </p>\r\n    <label for=\"Login\">Your email:</label>\r\n    <input type=\"email\" id=\"Login\" formControlName=\"email\" />\r\n\r\n    <label for=\"Password\">Your password:</label>\r\n    <input type=\"password\" required id=\"Password\" formControlName=\"password\" />\r\n\r\n    <label for=\"PasswordConfirm\">Password confirmation:</label>\r\n    <input\r\n      type=\"password\"\r\n      required\r\n      id=\"PasswordConfirm\"\r\n      formControlName=\"passConfirm\"\r\n      matchPassword\r\n    />\r\n    <button type=\"submit\" [disabled]=\"registerForm.invalid\">Register</button>\r\n  </div>\r\n</form>\r\n","import { AbstractControl } from '@angular/forms';\r\n\r\nexport function passwordMatch(\r\n  control: AbstractControl\r\n): { [key: string]: boolean } {\r\n  const password = control.get('password');\r\n  const passConfirm = control.get('passConfirm');\r\n\r\n  if (!password.value || !passConfirm.value) return null;\r\n\r\n  if (password.value === passConfirm.value) {\r\n    return null;\r\n  }\r\n  return { mismatch: true };\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { LoginPageComponent } from './login-page/login-page.component';\r\nimport { RegisterPageComponent } from './register-page/register-page.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    children: [\r\n      { path: '', component: LoginPageComponent },\r\n      { path: 'registration', component: RegisterPageComponent }\r\n    ]\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AuthRouterModule {}\r\n","import {\r\n  ChangeDetectionStrategy,\r\n  ChangeDetectorRef,\r\n  Component\r\n} from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { FirebaseAuthService } from '../../../shared/services/firebase/firebase-auth.service';\r\nimport { UserDataService } from 'src/app/shared/services/data/user-data.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-login-page',\r\n  templateUrl: './login-page.component.html',\r\n  styleUrls: ['./login-page.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class LoginPageComponent {\r\n  public user$ = this.userDataService.user$;\r\n  public loginForm: FormGroup;\r\n  public error = '';\r\n\r\n  constructor(\r\n    private firebaseAuthService: FirebaseAuthService,\r\n    private formBuilder: FormBuilder,\r\n    private userDataService: UserDataService,\r\n    private router: Router,\r\n    private changeDetectorRef: ChangeDetectorRef\r\n  ) {\r\n    this.loginForm = this.formBuilder.group({\r\n      email: [null, [Validators.required, Validators.email]],\r\n      password: [null, [Validators.required, Validators.minLength(6)]]\r\n    });\r\n  }\r\n\r\n  public onSubmit(): void {\r\n    this.firebaseAuthService\r\n      .signIn(this.loginForm.value.email, this.loginForm.value.password)\r\n      .subscribe(\r\n        (data) => {\r\n          this.userDataService.setUser(data);\r\n          this.router.navigate(['']);\r\n        },\r\n        (err) => {\r\n          this.error = err.message;\r\n          this.loginForm.reset();\r\n          this.changeDetectorRef.detectChanges();\r\n        }\r\n      );\r\n  }\r\n}\r\n","<form\r\n  [formGroup]=\"loginForm\"\r\n  (submit)=\"onSubmit()\"\r\n  *ngIf=\"!(user$ | async)?.email\"\r\n>\r\n  <div class=\"glass-window flex-cont\">\r\n    <h1>Sign In</h1>\r\n    <p class=\"error\" *ngIf=\"error\">{{ error }}</p>\r\n    <label for=\"Login\">Your email:</label>\r\n    <input type=\"email\" id=\"Login\" formControlName=\"email\" />\r\n    <label for=\"Login\">Your password:</label>\r\n    <input type=\"password\" required id=\"Password\" formControlName=\"password\" />\r\n    <button type=\"submit\" [disabled]=\"loginForm.invalid\">Sign In</button>\r\n    <br />\r\n    <label for=\"regist-button\">If you are not registered </label>\r\n    <a routerLink=\"registration\">Registration</a>\r\n  </div>\r\n</form>\r\n"],"sourceRoot":"webpack:///"}